136,88,10001000,1000,1000,"ADC A,B",ADC,B,,1,4,Z,0,H,C,Add n + Carry flag to A,,,,
137,89,10001001,1000,1001,"ADC A,C",ADC,C,,1,4,Z,0,H,C,Add n + Carry flag to A,,,,
138,8A,10001010,1000,1010,"ADC A,D",ADC,D,,1,4,Z,0,H,C,Add n + Carry flag to A,,,,
139,8B,10001011,1000,1011,"ADC A,E",ADC,E,,1,4,Z,0,H,C,Add n + Carry flag to A,,,,
140,8C,10001100,1000,1100,"ADC A,H",ADC,H,,1,4,Z,0,H,C,Add n + Carry flag to A,,,,
141,8D,10001101,1000,1101,"ADC A,L",ADC,L,,1,4,Z,0,H,C,Add n + Carry flag to A,,,,
142,8E,10001110,1000,1110,"ADC A,(HL)",ADC,(HL),,1,8,Z,0,H,C,Add n + Carry flag to A,,,,
143,8F,10001111,1000,1111,"ADC A,A",ADC,A,,1,4,Z,0,H,C,Add n + Carry flag to A,,,,
206,CE,11001110,1100,1110,"ADC A,d8",ADC,d8,,2,8,Z,0,H,C,Add n + Carry flag to A,,,,
9,9,1001,0,1001,"ADD HL,BC",ADD,HL,BC,1,8,-,0,H,C,Add n to A,,,,
25,19,11001,1,1001,"ADD HL,DE",ADD,HL,DE,1,8,-,0,H,C,Add n to A,,,,
41,29,101001,10,1001,"ADD HL,HL",ADD,HL,HL,1,8,-,0,H,C,Add n to A,,,,
57,39,111001,11,1001,"ADD HL,SP",ADD,HL,SP,1,8,-,0,H,C,Add n to A,,,,
128,80,10000000,1000,0,"ADD A,B",ADD,A,B,1,4,Z,0,H,C,Add n to A,,,,
129,81,10000001,1000,1,"ADD A,C",ADD,A,C,1,4,Z,0,H,C,Add n to A,,,,
130,82,10000010,1000,10,"ADD A,D",ADD,A,D,1,4,Z,0,H,C,Add n to A,,,,
131,83,10000011,1000,11,"ADD A,E",ADD,A,E,1,4,Z,0,H,C,Add n to A,,,,
132,84,10000100,1000,100,"ADD A,H",ADD,A,H,1,4,Z,0,H,C,Add n to A,,,,
133,85,10000101,1000,101,"ADD A,L",ADD,A,L,1,4,Z,0,H,C,Add n to A,,,,
134,86,10000110,1000,110,"ADD A,(HL)",ADD,A,(HL),1,8,Z,0,H,C,Add n to A,,,,
135,87,10000111,1000,111,"ADD A,A",ADD,A,A,1,4,Z,0,H,C,Add n to A,,,,
198,C6,11000110,1100,110,"ADD A,d8",ADD,A,d8,2,8,Z,0,H,C,Add n to A,,,,
232,E8,11101000,1110,1000,"ADD SP,r8",ADD,SP,r8,2,16,0,0,H,C,Add n to A,,,,
160,A0,10100000,1010,0,AND B,AND,B,,1,4,Z,0,1,0,"Logically AND n with A, result in A",,,,
161,A1,10100001,1010,1,AND C,AND,C,,1,4,Z,0,1,0,"Logically AND n with A, result in A",,,,
162,A2,10100010,1010,10,AND D,AND,D,,1,4,Z,0,1,0,"Logically AND n with A, result in A",,,,
163,A3,10100011,1010,11,AND E,AND,E,,1,4,Z,0,1,0,"Logically AND n with A, result in A",,,,
164,A4,10100100,1010,100,AND H,AND,H,,1,4,Z,0,1,0,"Logically AND n with A, result in A",,,,
165,A5,10100101,1010,101,AND L,AND,L,,1,4,Z,0,1,0,"Logically AND n with A, result in A",,,,
166,A6,10100110,1010,110,AND (HL),AND,(HL),,1,8,Z,0,1,0,"Logically AND n with A, result in A",,,,
167,A7,10100111,1010,111,AND A,AND,A,,1,4,Z,0,1,0,"Logically AND n with A, result in A",,,,
230,E6,11100110,1110,110,AND d8,AND,d8,,2,8,Z,0,1,0,"Logically AND n with A, result in A",,,,
196,C4,11000100,1100,100,"CALL NZ,a16",CALL,NZ,a16,3,24/12,-,-,-,-,Push address of next instruction onto stack and then jump to address nn, Conditional CALL,,,
204,CC,11001100,1100,1100,"CALL Z,a16",CALL,Z,a16,3,24/12,-,-,-,-,Push address of next instruction onto stack and then jump to address nn, Conditional CALL,,,
205,CD,11001101,1100,1101,CALL a16,CALL,a16,,3,24,-,-,-,-,Push address of next instruction onto stack and then jump to address nn, Conditional CALL,,,
212,D4,11010100,1101,100,"CALL NC,a16",CALL,NC,a16,3,24/12,-,-,-,-,Push address of next instruction onto stack and then jump to address nn, Conditional CALL,,,
220,DC,11011100,1101,1100,"CALL C,a16",CALL,C,a16,3,24/12,-,-,-,-,Push address of next instruction onto stack and then jump to address nn, Conditional CALL,,,
63,3F,111111,11,1111,CCF,CCF,,,1,4,-,0,0,C,"Complement carry flag; If C flag is set, then reset it; If C flag is reset, then set it",,,,
184,B8,10111000,1011,1000,CP B,CP,B,,1,4,Z,1,H,C,Compare A with n, This is basically an A - n subtraction instruction but the results are thrown away,,,
185,B9,10111001,1011,1001,CP C,CP,C,,1,4,Z,1,H,C,Compare A with n, This is basically an A - n subtraction instruction but the results are thrown away,,,
186,BA,10111010,1011,1010,CP D,CP,D,,1,4,Z,1,H,C,Compare A with n, This is basically an A - n subtraction instruction but the results are thrown away,,,
187,BB,10111011,1011,1011,CP E,CP,E,,1,4,Z,1,H,C,Compare A with n, This is basically an A - n subtraction instruction but the results are thrown away,,,
188,BC,10111100,1011,1100,CP H,CP,H,,1,4,Z,1,H,C,Compare A with n, This is basically an A - n subtraction instruction but the results are thrown away,,,
189,BD,10111101,1011,1101,CP L,CP,L,,1,4,Z,1,H,C,Compare A with n, This is basically an A - n subtraction instruction but the results are thrown away,,,
190,BE,10111110,1011,1110,CP (HL),CP,(HL),,1,8,Z,1,H,C,Compare A with n, This is basically an A - n subtraction instruction but the results are thrown away,,,
191,BF,10111111,1011,1111,CP A,CP,A,,1,4,Z,1,H,C,Compare A with n, This is basically an A - n subtraction instruction but the results are thrown away,,,
254,FE,11111110,1111,1110,CP d8,CP,d8,,2,8,Z,1,H,C,Compare A with n, This is basically an A - n subtraction instruction but the results are thrown away,,,
47,2F,101111,10,1111,CPL,CPL,,,1,4,-,1,1,-,Complement A register, (flip all bits),,,
39,27,100111,10,111,DAA,DAA,,,1,4,Z,-,0,C,Decimal adjust register A, This instruction adjusts register A so that the correct                 representation of Binary Coded Decimal (BCD) is obtained,,,
11,0B,1011,0,1011,DEC BC,DEC,BC,,1,8,-,-,-,-,Decrement register n,,,,
27,1B,11011,1,1011,DEC DE,DEC,DE,,1,8,-,-,-,-,Decrement register n,,,,
43,2B,101011,10,1011,DEC HL,DEC,HL,,1,8,-,-,-,-,Decrement register n,,,,
59,3B,111011,11,1011,DEC SP,DEC,SP,,1,8,-,-,-,-,Decrement register n,,,,
5,5,101,0,101,DEC B,DEC,B,,1,4,Z,1,H,-,Decrement register n,,,,
13,0D,1101,0,1101,DEC C,DEC,C,,1,4,Z,1,H,-,Decrement register n,,,,
21,15,10101,1,101,DEC D,DEC,D,,1,4,Z,1,H,-,Decrement register n,,,,
29,1D,11101,1,1101,DEC E,DEC,E,,1,4,Z,1,H,-,Decrement register n,,,,
37,25,100101,10,101,DEC H,DEC,H,,1,4,Z,1,H,-,Decrement register n,,,,
45,2D,101101,10,1101,DEC L,DEC,L,,1,4,Z,1,H,-,Decrement register n,,,,
53,35,110101,11,101,DEC (HL),DEC,(HL),,1,12,Z,1,H,-,Decrement register n,,,,
61,3D,111101,11,1101,DEC A,DEC,A,,1,4,Z,1,H,-,Decrement register n,,,,
243,F3,11110011,1111,11,DI,DI,,,1,4,-,-,-,-,This instruction disables interrupts but not immediately, Interrupts are disabled after                 instruction after DI is executed,,,
251,FB,11111011,1111,1011,EI,EI,,,1,4,-,-,-,-,Enable interrupts. This intruction enables interrupts but not immediately. Interrupts                 are enabled after instruction after EI is executed,,,,
118,76,1110110,111,110,HALT,HALT,,,1,4,-,-,-,-,Power down CPU until an interrupt occurs, Use this when ever possible to reduce energy consumption,,,
3,3,11,0,11,INC BC,INC,BC,,1,8,-,-,-,-,Increment register n,,,,
19,13,10011,1,11,INC DE,INC,DE,,1,8,-,-,-,-,Increment register n,,,,
35,23,100011,10,11,INC HL,INC,HL,,1,8,-,-,-,-,Increment register n,,,,
51,33,110011,11,11,INC SP,INC,SP,,1,8,-,-,-,-,Increment register n,,,,
4,4,100,0,100,INC B,INC,B,,1,4,Z,0,H,-,Increment register n,,,,
12,0C,1100,0,1100,INC C,INC,C,,1,4,Z,0,H,-,Increment register n,,,,
20,14,10100,1,100,INC D,INC,D,,1,4,Z,0,H,-,Increment register n,,,,
28,1C,11100,1,1100,INC E,INC,E,,1,4,Z,0,H,-,Increment register n,,,,
36,24,100100,10,100,INC H,INC,H,,1,4,Z,0,H,-,Increment register n,,,,
44,2C,101100,10,1100,INC L,INC,L,,1,4,Z,0,H,-,Increment register n,,,,
52,34,110100,11,100,INC (HL),INC,(HL),,1,12,Z,0,H,-,Increment register n,,,,
60,3C,111100,11,1100,INC A,INC,A,,1,4,Z,0,H,-,Increment register n,,,,
194,C2,11000010,1100,10,"JP NZ,a16",JP,NZ,a16,3,16/12,-,-,-,-,Jump to address nn, nn = two byte immediate value. (LS byte first), Conditional jump,,
195,C3,11000011,1100,11,JP a16,JP,a16,,3,16,-,-,-,-,Jump to address nn, nn = two byte immediate value. (LS byte first), Conditional jump,,
202,CA,11001010,1100,1010,"JP Z,a16",JP,Z,a16,3,16/12,-,-,-,-,Jump to address nn, nn = two byte immediate value. (LS byte first), Conditional jump,,
210,D2,11010010,1101,10,"JP NC,a16",JP,NC,a16,3,16/12,-,-,-,-,Jump to address nn, nn = two byte immediate value. (LS byte first), Conditional jump,,
218,DA,11011010,1101,1010,"JP C,a16",JP,C,a16,3,16/12,-,-,-,-,Jump to address nn, nn = two byte immediate value. (LS byte first), Conditional jump,,
233,E9,11101001,1110,1001,JP (HL),JP,(HL),,1,4,-,-,-,-,Jump to address nn, nn = two byte immediate value. (LS byte first), Conditional jump,,
24,18,11000,1,1000,JR r8,JR,r8,,2,12,-,-,-,-,Add n to current address and jump to it, Conditional JR,,,
32,20,100000,10,0,"JR NZ,r8",JR,NZ,r8,2,12/8,-,-,-,-,Add n to current address and jump to it, Conditional JR,,,
40,28,101000,10,1000,"JR Z,r8",JR,Z,r8,2,12/8,-,-,-,-,Add n to current address and jump to it, Conditional JR,,,
48,30,110000,11,0,"JR NC,r8",JR,NC,r8,2,12/8,-,-,-,-,Add n to current address and jump to it, Conditional JR,,,
56,38,111000,11,1000,"JR C,r8",JR,C,r8,2,12/8,-,-,-,-,Add n to current address and jump to it, Conditional JR,,,
1,1,1,0,1,"LD BC,d16",LD,BC,d16,3,12,-,-,-,-,Put,,,,
2,2,10,0,10,"LD (BC),A",LD,(BC),A,1,8,-,-,-,-,Put,,,,
6,6,110,0,110,"LD B,d8",LD,B,d8,2,8,-,-,-,-,Put,,,,
8,8,1000,0,1000,"LD (a16),SP",LD,(a16),SP,3,20,-,-,-,-,Put,,,,
10,0A,1010,0,1010,"LD A,(BC)",LD,A,(BC),1,8,-,-,-,-,Put,,,,
14,0E,1110,0,1110,"LD C,d8",LD,C,d8,2,8,-,-,-,-,Put,,,,
17,11,10001,1,1,"LD DE,d16",LD,DE,d16,3,12,-,-,-,-,Put,,,,
18,12,10010,1,10,"LD (DE),A",LD,(DE),A,1,8,-,-,-,-,Put,,,,
22,16,10110,1,110,"LD D,d8",LD,D,d8,2,8,-,-,-,-,Put,,,,
26,1A,11010,1,1010,"LD A,(DE)",LD,A,(DE),1,8,-,-,-,-,Put,,,,
30,1E,11110,1,1110,"LD E,d8",LD,E,d8,2,8,-,-,-,-,Put,,,,
33,21,100001,10,1,"LD HL,d16",LD,HL,d16,3,12,-,-,-,-,Put,,,,
34,22,100010,10,10,"LD (HL+),A",LD,(HL+),A,1,8,-,-,-,-,Put,,,,
38,26,100110,10,110,"LD H,d8",LD,H,d8,2,8,-,-,-,-,Put,,,,
42,2A,101010,10,1010,"LD A,(HL+)",LD,A,(HL+),1,8,-,-,-,-,Put,,,,
46,2E,101110,10,1110,"LD L,d8",LD,L,d8,2,8,-,-,-,-,Put,,,,
49,31,110001,11,1,"LD SP,d16",LD,SP,d16,3,12,-,-,-,-,Put,,,,
50,32,110010,11,10,"LD (HL-),A",LD,(HL-),A,1,8,-,-,-,-,Put,,,,
54,36,110110,11,110,"LD (HL),d8",LD,(HL),d8,2,12,-,-,-,-,Put,,,,
58,3A,111010,11,1010,"LD A,(HL-)",LD,A,(HL-),1,8,-,-,-,-,Put,,,,
62,3E,111110,11,1110,"LD A,d8",LD,A,d8,2,8,-,-,-,-,Put,,,,
64,40,1000000,100,0,"LD B,B",LD,B,B,1,4,-,-,-,-,Put,,,,
65,41,1000001,100,1,"LD B,C",LD,B,C,1,4,-,-,-,-,Put,,,,
66,42,1000010,100,10,"LD B,D",LD,B,D,1,4,-,-,-,-,Put,,,,
67,43,1000011,100,11,"LD B,E",LD,B,E,1,4,-,-,-,-,Put,,,,
68,44,1000100,100,100,"LD B,H",LD,B,H,1,4,-,-,-,-,Put,,,,
69,45,1000101,100,101,"LD B,L",LD,B,L,1,4,-,-,-,-,Put,,,,
70,46,1000110,100,110,"LD B,(HL)",LD,B,(HL),1,8,-,-,-,-,Put,,,,
71,47,1000111,100,111,"LD B,A",LD,B,A,1,4,-,-,-,-,Put,,,,
72,48,1001000,100,1000,"LD C,B",LD,C,B,1,4,-,-,-,-,Put,,,,
73,49,1001001,100,1001,"LD C,C",LD,C,C,1,4,-,-,-,-,Put,,,,
74,4A,1001010,100,1010,"LD C,D",LD,C,D,1,4,-,-,-,-,Put,,,,
75,4B,1001011,100,1011,"LD C,E",LD,C,E,1,4,-,-,-,-,Put,,,,
76,4C,1001100,100,1100,"LD C,H",LD,C,H,1,4,-,-,-,-,Put,,,,
77,4D,1001101,100,1101,"LD C,L",LD,C,L,1,4,-,-,-,-,Put,,,,
78,4E,1001110,100,1110,"LD C,(HL)",LD,C,(HL),1,8,-,-,-,-,Put,,,,
79,4F,1001111,100,1111,"LD C,A",LD,C,A,1,4,-,-,-,-,Put,,,,
80,50,1010000,101,0,"LD D,B",LD,D,B,1,4,-,-,-,-,Put,,,,
81,51,1010001,101,1,"LD D,C",LD,D,C,1,4,-,-,-,-,Put,,,,
82,52,1010010,101,10,"LD D,D",LD,D,D,1,4,-,-,-,-,Put,,,,
83,53,1010011,101,11,"LD D,E",LD,D,E,1,4,-,-,-,-,Put,,,,
84,54,1010100,101,100,"LD D,H",LD,D,H,1,4,-,-,-,-,Put,,,,
85,55,1010101,101,101,"LD D,L",LD,D,L,1,4,-,-,-,-,Put,,,,
86,56,1010110,101,110,"LD D,(HL)",LD,D,(HL),1,8,-,-,-,-,Put,,,,
87,57,1010111,101,111,"LD D,A",LD,D,A,1,4,-,-,-,-,Put,,,,
88,58,1011000,101,1000,"LD E,B",LD,E,B,1,4,-,-,-,-,Put,,,,
89,59,1011001,101,1001,"LD E,C",LD,E,C,1,4,-,-,-,-,Put,,,,
90,5A,1011010,101,1010,"LD E,D",LD,E,D,1,4,-,-,-,-,Put,,,,
91,5B,1011011,101,1011,"LD E,E",LD,E,E,1,4,-,-,-,-,Put,,,,
92,5C,1011100,101,1100,"LD E,H",LD,E,H,1,4,-,-,-,-,Put,,,,
93,5D,1011101,101,1101,"LD E,L",LD,E,L,1,4,-,-,-,-,Put,,,,
94,5E,1011110,101,1110,"LD E,(HL)",LD,E,(HL),1,8,-,-,-,-,Put,,,,
95,5F,1011111,101,1111,"LD E,A",LD,E,A,1,4,-,-,-,-,Put,,,,
96,60,1100000,110,0,"LD H,B",LD,H,B,1,4,-,-,-,-,Put,,,,
97,61,1100001,110,1,"LD H,C",LD,H,C,1,4,-,-,-,-,Put,,,,
98,62,1100010,110,10,"LD H,D",LD,H,D,1,4,-,-,-,-,Put,,,,
99,63,1100011,110,11,"LD H,E",LD,H,E,1,4,-,-,-,-,Put,,,,
100,64,1100100,110,100,"LD H,H",LD,H,H,1,4,-,-,-,-,Put,,,,
101,65,1100101,110,101,"LD H,L",LD,H,L,1,4,-,-,-,-,Put,,,,
102,66,1100110,110,110,"LD H,(HL)",LD,H,(HL),1,8,-,-,-,-,Put,,,,
103,67,1100111,110,111,"LD H,A",LD,H,A,1,4,-,-,-,-,Put,,,,
104,68,1101000,110,1000,"LD L,B",LD,L,B,1,4,-,-,-,-,Put,,,,
105,69,1101001,110,1001,"LD L,C",LD,L,C,1,4,-,-,-,-,Put,,,,
106,6A,1101010,110,1010,"LD L,D",LD,L,D,1,4,-,-,-,-,Put,,,,
107,6B,1101011,110,1011,"LD L,E",LD,L,E,1,4,-,-,-,-,Put,,,,
108,6C,1101100,110,1100,"LD L,H",LD,L,H,1,4,-,-,-,-,Put,,,,
109,6D,1101101,110,1101,"LD L,L",LD,L,L,1,4,-,-,-,-,Put,,,,
110,6E,1101110,110,1110,"LD L,(HL)",LD,L,(HL),1,8,-,-,-,-,Put,,,,
111,6F,1101111,110,1111,"LD L,A",LD,L,A,1,4,-,-,-,-,Put,,,,
112,70,1110000,111,0,"LD (HL),B",LD,(HL),B,1,8,-,-,-,-,Put,,,,
113,71,1110001,111,1,"LD (HL),C",LD,(HL),C,1,8,-,-,-,-,Put,,,,
114,72,1110010,111,10,"LD (HL),D",LD,(HL),D,1,8,-,-,-,-,Put,,,,
115,73,1110011,111,11,"LD (HL),E",LD,(HL),E,1,8,-,-,-,-,Put,,,,
116,74,1110100,111,100,"LD (HL),H",LD,(HL),H,1,8,-,-,-,-,Put,,,,
117,75,1110101,111,101,"LD (HL),L",LD,(HL),L,1,8,-,-,-,-,Put,,,,
119,77,1110111,111,111,"LD (HL),A",LD,(HL),A,1,8,-,-,-,-,Put,,,,
120,78,1111000,111,1000,"LD A,B",LD,A,B,1,4,-,-,-,-,Put,,,,
121,79,1111001,111,1001,"LD A,C",LD,A,C,1,4,-,-,-,-,Put,,,,
122,7A,1111010,111,1010,"LD A,D",LD,A,D,1,4,-,-,-,-,Put,,,,
123,7B,1111011,111,1011,"LD A,E",LD,A,E,1,4,-,-,-,-,Put,,,,
124,7C,1111100,111,1100,"LD A,H",LD,A,H,1,4,-,-,-,-,Put,,,,
125,7D,1111101,111,1101,"LD A,L",LD,A,L,1,4,-,-,-,-,Put,,,,
126,7E,1111110,111,1110,"LD A,(HL)",LD,A,(HL),1,8,-,-,-,-,Put,,,,
127,7F,1111111,111,1111,"LD A,A",LD,A,A,1,4,-,-,-,-,Put,,,,
226,E2,11100010,1110,10,"LD (C),A",LD,(C),A,2,8,-,-,-,-,Put,,,,
234,EA,11101010,1110,1010,"LD (a16),A",LD,(a16),A,3,16,-,-,-,-,Put,,,,
242,F2,11110010,1111,10,"LD A,(C)",LD,A,(C),2,8,-,-,-,-,Put,,,,
249,F9,11111001,1111,1001,"LD SP,HL",LD,SP,HL,1,8,-,-,-,-,Put,,,,
250,FA,11111010,1111,1010,"LD A,(a16)",LD,A,(a16),3,16,-,-,-,-,Put,,,,
248,F8,11111000,1111,1000,"LD HL,SP+r8",LD,HL,SP+r8,2,12,0,0,H,C,Put,,,,
224,E0,11100000,1110,0,"LDH (a8),A",LDH,(a8),A,2,12,-,-,-,-,Put in/out of memory address +0xFF00,,,,
240,F0,11110000,1111,0,"LDH A,(a8)",LDH,A,(a8),2,12,-,-,-,-,Put in/out of memory address +0xFF00,,,,
0,0,0,0,0,NOP,NOP,,,1,4,-,-,-,-,No operation,,,,
176,B0,10110000,1011,0,OR B,OR,B,,1,4,Z,0,0,0,"Logical OR n with register A, result in A",,,,
177,B1,10110001,1011,1,OR C,OR,C,,1,4,Z,0,0,0,"Logical OR n with register A, result in A",,,,
178,B2,10110010,1011,10,OR D,OR,D,,1,4,Z,0,0,0,"Logical OR n with register A, result in A",,,,
179,B3,10110011,1011,11,OR E,OR,E,,1,4,Z,0,0,0,"Logical OR n with register A, result in A",,,,
180,B4,10110100,1011,100,OR H,OR,H,,1,4,Z,0,0,0,"Logical OR n with register A, result in A",,,,
181,B5,10110101,1011,101,OR L,OR,L,,1,4,Z,0,0,0,"Logical OR n with register A, result in A",,,,
182,B6,10110110,1011,110,OR (HL),OR,(HL),,1,8,Z,0,0,0,"Logical OR n with register A, result in A",,,,
183,B7,10110111,1011,111,OR A,OR,A,,1,4,Z,0,0,0,"Logical OR n with register A, result in A",,,,
246,F6,11110110,1111,110,OR d8,OR,d8,,2,8,Z,0,0,0,"Logical OR n with register A, result in A",,,,
193,C1,11000001,1100,1,POP BC,POP,BC,,1,12,-,-,-,-,Pop two bytes off stack into register pair nn, Increment Stack Pointer (SP) twice,,,
209,D1,11010001,1101,1,POP DE,POP,DE,,1,12,-,-,-,-,Pop two bytes off stack into register pair nn, Increment Stack Pointer (SP) twice,,,
225,E1,11100001,1110,1,POP HL,POP,HL,,1,12,-,-,-,-,Pop two bytes off stack into register pair nn, Increment Stack Pointer (SP) twice,,,
241,F1,11110001,1111,1,POP AF,POP,AF,,1,12,,,,,Pop two bytes off stack into register pair nn !!!! ZNHC removed from this line, Increment Stack Pointer (SP) twice,,,
203,CB,11001011,1100,1011,PREFIX CB,PREFIX,CB,,1,4,-,-,-,-,,,,,
197,C5,11000101,1100,101,PUSH BC,PUSH,BC,,1,16,-,-,-,-,Push register pair nn onto stack, Decrement Stack Pointer (SP) twice,,, Conditional jump
213,D5,11010101,1101,101,PUSH DE,PUSH,DE,,1,16,-,-,-,-,Push register pair nn onto stack, Decrement Stack Pointer (SP) twice,,, Conditional jump
229,E5,11100101,1110,101,PUSH HL,PUSH,HL,,1,16,-,-,-,-,Push register pair nn onto stack, Decrement Stack Pointer (SP) twice,,,
245,F5,11110101,1111,101,PUSH AF,PUSH,AF,,1,16,-,-,-,-,Push register pair nn onto stack, Decrement Stack Pointer (SP) twice,,,
192,C0,11000000,1100,0,RET NZ,RET,NZ,,1,20/8,-,-,-,-,Pop two bytes from stack & jump to that address, Conditional RET,,,
200,C8,11001000,1100,1000,RET Z,RET,Z,,1,20/8,-,-,-,-,Pop two bytes from stack & jump to that address, Conditional RET,,,
201,C9,11001001,1100,1001,RET,RET,,,1,16,-,-,-,-,Pop two bytes from stack & jump to that address, Conditional RET,,,
208,D0,11010000,1101,0,RET NC,RET,NC,,1,20/8,-,-,-,-,Pop two bytes from stack & jump to that address, Conditional RET,,,
216,D8,11011000,1101,1000,RET C,RET,C,,1,20/8,-,-,-,-,Pop two bytes from stack & jump to that address, Conditional RET,,, Conditional jump
217,D9,11011001,1101,1001,RETI,RETI,,,1,16,-,-,-,-,Pop two bytes from stack & jump to that address then enable interrupts,,,,
23,17,10111,1,111,RLA,RLA,,,1,4,0,0,0,C,Rotate A left through Carry flag,,,,
7,7,111,0,111,RLCA,RLCA,,,1,4,0,0,0,C,Rotate A left. Old bit 7 to Carry flag,,,,
31,1F,11111,1,1111,RRA,RRA,,,1,4,0,0,0,C,Rotate A right through Carry flag,,,,
15,0F,1111,0,1111,RRCA,RRCA,,,1,4,0,0,0,C,Rotate A right, Old bit 0 to Carry flag,,,
199,C7,11000111,1100,111,RST 00H,RST,00H,,1,16,-,-,-,-,"Push present address onto stack; Jump to address $0000 + n; Use with: n = $00,$08,$10,$18,$20,$28,$30,$38",,,,
207,CF,11001111,1100,1111,RST 08H,RST,08H,,1,16,-,-,-,-,"Push present address onto stack; Jump to address $0000 + n; n = $00,$08,$10,$18,$20,$28,$30,$38",,,,
215,D7,11010111,1101,111,RST 10H,RST,10H,,1,16,-,-,-,-,Push present address onto stack, Jump to address $0000 + n,,, Conditional jump
223,DF,11011111,1101,1111,RST 18H,RST,18H,,1,16,-,-,-,-,Push present address onto stack, Jump to address $0000 + n,,,
231,E7,11100111,1110,111,RST 20H,RST,20H,,1,16,-,-,-,-,"Push present address onto stack; Jump to address $0000 + n; Use with n = $00,$08,$10,$18,$20,$28,$30,$38",,,,
239,EF,11101111,1110,1111,RST 28H,RST,28H,,1,16,-,-,-,-,Push present address onto stack, Jump to address $0000 + n,,,
247,F7,11110111,1111,111,RST 30H,RST,30H,,1,16,-,-,-,-,Push present address onto stack, Jump to address $0000 + n,,,
255,FF,11111111,1111,1111,RST 38H,RST,38H,,1,16,-,-,-,-,Push present address onto stack, Jump to address $0000 + n,,,
152,98,10011000,1001,1000,"SBC A,B",SBC,B,,1,4,Z,1,H,C,Subtract n + Carry flag from A,,,,
153,99,10011001,1001,1001,"SBC A,C",SBC,C,,1,4,Z,1,H,C,Subtract n + Carry flag from A,,,,
154,9A,10011010,1001,1010,"SBC A,D",SBC,D,,1,4,Z,1,H,C,Subtract n + Carry flag from A,,,, Conditional jump
155,9B,10011011,1001,1011,"SBC A,E",SBC,E,,1,4,Z,1,H,C,Subtract n + Carry flag from A,,,,
156,9C,10011100,1001,1100,"SBC A,H",SBC,H,,1,4,Z,1,H,C,Subtract n + Carry flag from A,,,,
157,9D,10011101,1001,1101,"SBC A,L",SBC,L,,1,4,Z,1,H,C,Subtract n + Carry flag from A,,,,
158,9E,10011110,1001,1110,"SBC A,(HL)",SBC,(HL),,1,8,Z,1,H,C,Subtract n + Carry flag from A,,,,
159,9F,10011111,1001,1111,"SBC A,A",SBC,A,,1,4,Z,1,H,C,Subtract n + Carry flag from A,,,,
222,DE,11011110,1101,1110,"SBC A,d8",SBC,d8,,2,8,Z,1,H,C,Subtract n + Carry flag from A,,,,
55,37,110111,11,111,SCF,SCF,,,1,4,-,0,0,1,Set Carry flag,,,,
16,10,10000,1,0,STOP 0,STOP,0,,2,4,-,-,-,-,Halt CPU & LCD display until button pressed,,,,
144,90,10010000,1001,0,SUB B,SUB,B,,1,4,Z,1,H,C,Subtract n from A,,,,
145,91,10010001,1001,1,SUB C,SUB,C,,1,4,Z,1,H,C,Subtract n from A,,,,
146,92,10010010,1001,10,SUB D,SUB,D,,1,4,Z,1,H,C,Subtract n from A,,,,
147,93,10010011,1001,11,SUB E,SUB,E,,1,4,Z,1,H,C,Subtract n from A,,,,
148,94,10010100,1001,100,SUB H,SUB,H,,1,4,Z,1,H,C,Subtract n from A,,,,
149,95,10010101,1001,101,SUB L,SUB,L,,1,4,Z,1,H,C,Subtract n from A,,,,
150,96,10010110,1001,110,SUB (HL),SUB,(HL),,1,8,Z,1,H,C,Subtract n from A,,,, Conditional jump
151,97,10010111,1001,111,SUB A,SUB,A,,1,4,Z,1,H,C,Subtract n from A,,,,
214,D6,11010110,1101,110,SUB d8,SUB,d8,,2,8,Z,1,H,C,Subtract n from A,,,,
168,A8,10101000,1010,1000,XOR B,XOR,B,,1,4,Z,0,0,0,"Logical exclusive OR n with register A, result in A",,,,
169,A9,10101001,1010,1001,XOR C,XOR,C,,1,4,Z,0,0,0,"Logical exclusive OR n with register A, result in A",,,,
170,AA,10101010,1010,1010,XOR D,XOR,D,,1,4,Z,0,0,0,"Logical exclusive OR n with register A, result in A",,,,
171,AB,10101011,1010,1011,XOR E,XOR,E,,1,4,Z,0,0,0,"Logical exclusive OR n with register A, result in A",,,,
172,AC,10101100,1010,1100,XOR H,XOR,H,,1,4,Z,0,0,0,"Logical exclusive OR n with register A, result in A",,,,
173,AD,10101101,1010,1101,XOR L,XOR,L,,1,4,Z,0,0,0,"Logical exclusive OR n with register A, result in A",,,,
174,AE,10101110,1010,1110,XOR (HL),XOR,(HL),,1,8,Z,0,0,0,"Logical exclusive OR n with register A, result in A",,,,
175,AF,10101111,1010,1111,XOR A,XOR,A,,1,4,Z,0,0,0,"Logical exclusive OR n with register A, result in A",,,,
238,EE,11101110,1110,1110,XOR d8,XOR,d8,,2,8,Z,0,0,0,"Logical exclusive OR n with register A, result in A",,,,
211,D3,11010011,1101,11, ,,,,,,,,,,,,,,
219,DB,11011011,1101,1011, ,,,,,,,,,,,,,,
221,DD,11011101,1101,1101, ,,,,,,,,,,,,,,
227,E3,11100011,1110,11, ,,,,,,,,,,,,,,
228,E4,11100100,1110,100, ,,,,,,,,,,,,,,
235,EB,11101011,1110,1011, ,,,,,,,,,,,,,,
236,EC,11101100,1110,1100, ,,,,,,,,,,,,,,
237,ED,11101101,1110,1101, ,,,,,,,,,,,,,,
244,F4,11110100,1111,100, ,,,,,,,,,,,,,,
252,FC,11111100,1111,1100, ,,,,,,,,,,,,,,
253,FD,11111101,1111,1101, ,,,,,,,,,,,,,,
