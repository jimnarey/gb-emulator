public void NOP() {

	// NOP : L1:T4: -:-:-:- :0x00 



}

public void LD() {

	// LD BC,d16 : L3:T12: -:-:-:- :0x01
	// LD (BC),A : L1:T8: -:-:-:- :0x02
	// LD B,d8 : L2:T8: -:-:-:- :0x06
	// LD (a16),SP : L3:T20: -:-:-:- :0x08
	// LD A,(BC) : L1:T8: -:-:-:- :0x0A
	// LD C,d8 : L2:T8: -:-:-:- :0x0E
	// LD DE,d16 : L3:T12: -:-:-:- :0x11
	// LD (DE),A : L1:T8: -:-:-:- :0x12
	// LD D,d8 : L2:T8: -:-:-:- :0x16
	// LD A,(DE) : L1:T8: -:-:-:- :0x1A
	// LD E,d8 : L2:T8: -:-:-:- :0x1E
	// LD HL,d16 : L3:T12: -:-:-:- :0x21
	// LD (HL+),A : L1:T8: -:-:-:- :0x22
	// LD H,d8 : L2:T8: -:-:-:- :0x26
	// LD A,(HL+) : L1:T8: -:-:-:- :0x2A
	// LD L,d8 : L2:T8: -:-:-:- :0x2E
	// LD SP,d16 : L3:T12: -:-:-:- :0x31
	// LD (HL-),A : L1:T8: -:-:-:- :0x32
	// LD (HL),d8 : L2:T12: -:-:-:- :0x36
	// LD A,(HL-) : L1:T8: -:-:-:- :0x3A
	// LD A,d8 : L2:T8: -:-:-:- :0x3E
	// LD B,B : L1:T4: -:-:-:- :0x40
	// LD B,C : L1:T4: -:-:-:- :0x41
	// LD B,D : L1:T4: -:-:-:- :0x42
	// LD B,E : L1:T4: -:-:-:- :0x43
	// LD B,H : L1:T4: -:-:-:- :0x44
	// LD B,L : L1:T4: -:-:-:- :0x45
	// LD B,(HL) : L1:T8: -:-:-:- :0x46
	// LD B,A : L1:T4: -:-:-:- :0x47
	// LD C,B : L1:T4: -:-:-:- :0x48
	// LD C,C : L1:T4: -:-:-:- :0x49
	// LD C,D : L1:T4: -:-:-:- :0x4A
	// LD C,E : L1:T4: -:-:-:- :0x4B
	// LD C,H : L1:T4: -:-:-:- :0x4C
	// LD C,L : L1:T4: -:-:-:- :0x4D
	// LD C,(HL) : L1:T8: -:-:-:- :0x4E
	// LD C,A : L1:T4: -:-:-:- :0x4F
	// LD D,B : L1:T4: -:-:-:- :0x50
	// LD D,C : L1:T4: -:-:-:- :0x51
	// LD D,D : L1:T4: -:-:-:- :0x52
	// LD D,E : L1:T4: -:-:-:- :0x53
	// LD D,H : L1:T4: -:-:-:- :0x54
	// LD D,L : L1:T4: -:-:-:- :0x55
	// LD D,(HL) : L1:T8: -:-:-:- :0x56
	// LD D,A : L1:T4: -:-:-:- :0x57
	// LD E,B : L1:T4: -:-:-:- :0x58
	// LD E,C : L1:T4: -:-:-:- :0x59
	// LD E,D : L1:T4: -:-:-:- :0x5A
	// LD E,E : L1:T4: -:-:-:- :0x5B
	// LD E,H : L1:T4: -:-:-:- :0x5C
	// LD E,L : L1:T4: -:-:-:- :0x5D
	// LD E,(HL) : L1:T8: -:-:-:- :0x5E
	// LD E,A : L1:T4: -:-:-:- :0x5F
	// LD H,B : L1:T4: -:-:-:- :0x60
	// LD H,C : L1:T4: -:-:-:- :0x61
	// LD H,D : L1:T4: -:-:-:- :0x62
	// LD H,E : L1:T4: -:-:-:- :0x63
	// LD H,H : L1:T4: -:-:-:- :0x64
	// LD H,L : L1:T4: -:-:-:- :0x65
	// LD H,(HL) : L1:T8: -:-:-:- :0x66
	// LD H,A : L1:T4: -:-:-:- :0x67
	// LD L,B : L1:T4: -:-:-:- :0x68
	// LD L,C : L1:T4: -:-:-:- :0x69
	// LD L,D : L1:T4: -:-:-:- :0x6A
	// LD L,E : L1:T4: -:-:-:- :0x6B
	// LD L,H : L1:T4: -:-:-:- :0x6C
	// LD L,L : L1:T4: -:-:-:- :0x6D
	// LD L,(HL) : L1:T8: -:-:-:- :0x6E
	// LD L,A : L1:T4: -:-:-:- :0x6F
	// LD (HL),B : L1:T8: -:-:-:- :0x70
	// LD (HL),C : L1:T8: -:-:-:- :0x71
	// LD (HL),D : L1:T8: -:-:-:- :0x72
	// LD (HL),E : L1:T8: -:-:-:- :0x73
	// LD (HL),H : L1:T8: -:-:-:- :0x74
	// LD (HL),L : L1:T8: -:-:-:- :0x75
	// LD (HL),A : L1:T8: -:-:-:- :0x77
	// LD A,B : L1:T4: -:-:-:- :0x78
	// LD A,C : L1:T4: -:-:-:- :0x79
	// LD A,D : L1:T4: -:-:-:- :0x7A
	// LD A,E : L1:T4: -:-:-:- :0x7B
	// LD A,H : L1:T4: -:-:-:- :0x7C
	// LD A,L : L1:T4: -:-:-:- :0x7D
	// LD A,(HL) : L1:T8: -:-:-:- :0x7E
	// LD A,A : L1:T4: -:-:-:- :0x7F
	// LD (C),A : L2:T8: -:-:-:- :0xE2
	// LD (a16),A : L3:T16: -:-:-:- :0xEA
	// LD A,(C) : L2:T8: -:-:-:- :0xF2
	// LD HL,SP+r8 : L2:T12: 0:0:H:C :0xF8
	// LD SP,HL : L1:T8: -:-:-:- :0xF9
	// LD A,(a16) : L3:T16: -:-:-:- :0xFA 



}

public void INC() {

	// INC BC : L1:T8: -:-:-:- :0x03
	// INC B : L1:T4: Z:0:H:- :0x04
	// INC C : L1:T4: Z:0:H:- :0x0C
	// INC DE : L1:T8: -:-:-:- :0x13
	// INC D : L1:T4: Z:0:H:- :0x14
	// INC E : L1:T4: Z:0:H:- :0x1C
	// INC HL : L1:T8: -:-:-:- :0x23
	// INC H : L1:T4: Z:0:H:- :0x24
	// INC L : L1:T4: Z:0:H:- :0x2C
	// INC SP : L1:T8: -:-:-:- :0x33
	// INC (HL) : L1:T12: Z:0:H:- :0x34
	// INC A : L1:T4: Z:0:H:- :0x3C 



}

public void DEC() {

	// DEC B : L1:T4: Z:1:H:- :0x05
	// DEC BC : L1:T8: -:-:-:- :0x0B
	// DEC C : L1:T4: Z:1:H:- :0x0D
	// DEC D : L1:T4: Z:1:H:- :0x15
	// DEC DE : L1:T8: -:-:-:- :0x1B
	// DEC E : L1:T4: Z:1:H:- :0x1D
	// DEC H : L1:T4: Z:1:H:- :0x25
	// DEC HL : L1:T8: -:-:-:- :0x2B
	// DEC L : L1:T4: Z:1:H:- :0x2D
	// DEC (HL) : L1:T12: Z:1:H:- :0x35
	// DEC SP : L1:T8: -:-:-:- :0x3B
	// DEC A : L1:T4: Z:1:H:- :0x3D 



}

public void RLCA() {

	// RLCA : L1:T4: 0:0:0:C :0x07 



}

public void ADD() {

	// ADD HL,BC : L1:T8: -:0:H:C :0x09
	// ADD HL,DE : L1:T8: -:0:H:C :0x19
	// ADD HL,HL : L1:T8: -:0:H:C :0x29
	// ADD HL,SP : L1:T8: -:0:H:C :0x39
	// ADD A,B : L1:T4: Z:0:H:C :0x80
	// ADD A,C : L1:T4: Z:0:H:C :0x81
	// ADD A,D : L1:T4: Z:0:H:C :0x82
	// ADD A,E : L1:T4: Z:0:H:C :0x83
	// ADD A,H : L1:T4: Z:0:H:C :0x84
	// ADD A,L : L1:T4: Z:0:H:C :0x85
	// ADD A,(HL) : L1:T8: Z:0:H:C :0x86
	// ADD A,A : L1:T4: Z:0:H:C :0x87
	// ADD A,d8 : L2:T8: Z:0:H:C :0xC6
	// ADD SP,r8 : L2:T16: 0:0:H:C :0xE8 



}

public void RRCA() {

	// RRCA : L1:T4: 0:0:0:C :0x0F 



}

public void STOP() {

	// STOP 0 : L2:T4: -:-:-:- :0x10 



}

public void RLA() {

	// RLA : L1:T4: 0:0:0:C :0x17 



}

public void JR() {

	// JR r8 : L2:T12: -:-:-:- :0x18
	// JR NZ,r8 : L2:T12/8: -:-:-:- :0x20
	// JR Z,r8 : L2:T12/8: -:-:-:- :0x28
	// JR NC,r8 : L2:T12/8: -:-:-:- :0x30
	// JR C,r8 : L2:T12/8: -:-:-:- :0x38 



}

public void RRA() {

	// RRA : L1:T4: 0:0:0:C :0x1F 



}

public void DAA() {

	// DAA : L1:T4: Z:-:0:C :0x27 



}

public void CPL() {

	// CPL : L1:T4: -:1:1:- :0x2F 



}

public void SCF() {

	// SCF : L1:T4: -:0:0:1 :0x37 



}

public void CCF() {

	// CCF : L1:T4: -:0:0:C :0x3F 



}

public void HALT() {

	// HALT : L1:T4: -:-:-:- :0x76 



}

public void ADC() {

	// ADC A,B : L1:T4: Z:0:H:C :0x88
	// ADC A,C : L1:T4: Z:0:H:C :0x89
	// ADC A,D : L1:T4: Z:0:H:C :0x8A
	// ADC A,E : L1:T4: Z:0:H:C :0x8B
	// ADC A,H : L1:T4: Z:0:H:C :0x8C
	// ADC A,L : L1:T4: Z:0:H:C :0x8D
	// ADC A,(HL) : L1:T8: Z:0:H:C :0x8E
	// ADC A,A : L1:T4: Z:0:H:C :0x8F
	// ADC A,d8 : L2:T8: Z:0:H:C :0xCE 



}

public void SUB() {

	// SUB B : L1:T4: Z:1:H:C :0x90
	// SUB C : L1:T4: Z:1:H:C :0x91
	// SUB D : L1:T4: Z:1:H:C :0x92
	// SUB E : L1:T4: Z:1:H:C :0x93
	// SUB H : L1:T4: Z:1:H:C :0x94
	// SUB L : L1:T4: Z:1:H:C :0x95
	// SUB (HL) : L1:T8: Z:1:H:C :0x96
	// SUB A : L1:T4: Z:1:H:C :0x97
	// SUB d8 : L2:T8: Z:1:H:C :0xD6 



}

public void SBC() {

	// SBC A,B : L1:T4: Z:1:H:C :0x98
	// SBC A,C : L1:T4: Z:1:H:C :0x99
	// SBC A,D : L1:T4: Z:1:H:C :0x9A
	// SBC A,E : L1:T4: Z:1:H:C :0x9B
	// SBC A,H : L1:T4: Z:1:H:C :0x9C
	// SBC A,L : L1:T4: Z:1:H:C :0x9D
	// SBC A,(HL) : L1:T8: Z:1:H:C :0x9E
	// SBC A,A : L1:T4: Z:1:H:C :0x9F
	// SBC A,d8 : L2:T8: Z:1:H:C :0xDE 



}

public void AND() {

	// AND B : L1:T4: Z:0:1:0 :0xA0
	// AND C : L1:T4: Z:0:1:0 :0xA1
	// AND D : L1:T4: Z:0:1:0 :0xA2
	// AND E : L1:T4: Z:0:1:0 :0xA3
	// AND H : L1:T4: Z:0:1:0 :0xA4
	// AND L : L1:T4: Z:0:1:0 :0xA5
	// AND (HL) : L1:T8: Z:0:1:0 :0xA6
	// AND A : L1:T4: Z:0:1:0 :0xA7
	// AND d8 : L2:T8: Z:0:1:0 :0xE6 



}

public void XOR() {

	// XOR B : L1:T4: Z:0:0:0 :0xA8
	// XOR C : L1:T4: Z:0:0:0 :0xA9
	// XOR D : L1:T4: Z:0:0:0 :0xAA
	// XOR E : L1:T4: Z:0:0:0 :0xAB
	// XOR H : L1:T4: Z:0:0:0 :0xAC
	// XOR L : L1:T4: Z:0:0:0 :0xAD
	// XOR (HL) : L1:T8: Z:0:0:0 :0xAE
	// XOR A : L1:T4: Z:0:0:0 :0xAF
	// XOR d8 : L2:T8: Z:0:0:0 :0xEE 



}

public void OR() {

	// OR B : L1:T4: Z:0:0:0 :0xB0
	// OR C : L1:T4: Z:0:0:0 :0xB1
	// OR D : L1:T4: Z:0:0:0 :0xB2
	// OR E : L1:T4: Z:0:0:0 :0xB3
	// OR H : L1:T4: Z:0:0:0 :0xB4
	// OR L : L1:T4: Z:0:0:0 :0xB5
	// OR (HL) : L1:T8: Z:0:0:0 :0xB6
	// OR A : L1:T4: Z:0:0:0 :0xB7
	// OR d8 : L2:T8: Z:0:0:0 :0xF6 



}

public void CP() {

	// CP B : L1:T4: Z:1:H:C :0xB8
	// CP C : L1:T4: Z:1:H:C :0xB9
	// CP D : L1:T4: Z:1:H:C :0xBA
	// CP E : L1:T4: Z:1:H:C :0xBB
	// CP H : L1:T4: Z:1:H:C :0xBC
	// CP L : L1:T4: Z:1:H:C :0xBD
	// CP (HL) : L1:T8: Z:1:H:C :0xBE
	// CP A : L1:T4: Z:1:H:C :0xBF
	// CP d8 : L2:T8: Z:1:H:C :0xFE 



}

public void RET() {

	// RET NZ : L1:T20/8: -:-:-:- :0xC0
	// RET Z : L1:T20/8: -:-:-:- :0xC8
	// RET : L1:T16: -:-:-:- :0xC9
	// RET NC : L1:T20/8: -:-:-:- :0xD0
	// RET C : L1:T20/8: -:-:-:- :0xD8 



}

public void POP() {

	// POP BC : L1:T12: -:-:-:- :0xC1
	// POP DE : L1:T12: -:-:-:- :0xD1
	// POP HL : L1:T12: -:-:-:- :0xE1
	// POP AF : L1:T12: Z:N:H:C :0xF1 



}

public void JP() {

	// JP NZ,a16 : L3:T16/12: -:-:-:- :0xC2
	// JP a16 : L3:T16: -:-:-:- :0xC3
	// JP Z,a16 : L3:T16/12: -:-:-:- :0xCA
	// JP NC,a16 : L3:T16/12: -:-:-:- :0xD2
	// JP C,a16 : L3:T16/12: -:-:-:- :0xDA
	// JP (HL) : L1:T4: -:-:-:- :0xE9 



}

public void CALL() {

	// CALL NZ,a16 : L3:T24/12: -:-:-:- :0xC4
	// CALL Z,a16 : L3:T24/12: -:-:-:- :0xCC
	// CALL a16 : L3:T24: -:-:-:- :0xCD
	// CALL NC,a16 : L3:T24/12: -:-:-:- :0xD4
	// CALL C,a16 : L3:T24/12: -:-:-:- :0xDC 



}

public void PUSH() {

	// PUSH BC : L1:T16: -:-:-:- :0xC5
	// PUSH DE : L1:T16: -:-:-:- :0xD5
	// PUSH HL : L1:T16: -:-:-:- :0xE5
	// PUSH AF : L1:T16: -:-:-:- :0xF5 



}

public void RST() {

	// RST 00H : L1:T16: -:-:-:- :0xC7
	// RST 08H : L1:T16: -:-:-:- :0xCF
	// RST 10H : L1:T16: -:-:-:- :0xD7
	// RST 18H : L1:T16: -:-:-:- :0xDF
	// RST 20H : L1:T16: -:-:-:- :0xE7
	// RST 28H : L1:T16: -:-:-:- :0xEF
	// RST 30H : L1:T16: -:-:-:- :0xF7
	// RST 38H : L1:T16: -:-:-:- :0xFF 



}

public void PREFIX() {

	// PREFIX CB : L1:T4: -:-:-:- :0xCB 



}

public void RETI() {

	// RETI : L1:T16: -:-:-:- :0xD9 



}

public void LDH() {

	// LDH (a8),A : L2:T12: -:-:-:- :0xE0
	// LDH A,(a8) : L2:T12: -:-:-:- :0xF0 



}

public void DI() {

	// DI : L1:T4: -:-:-:- :0xF3 



}

public void EI() {

	// EI : L1:T4: -:-:-:- :0xFB 



}

